<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5Vjv6uT/7+rk/+/q5P/m3df/y7qx/8e1rP/Htaz/x7Ws/8e1rP/Htaz/x7Ws/8e1rP/Htaz/y7qx/+be
        2P/v6uT/7+rk/+/q5P/w6uRVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADe1s4f7+rlzO/q5P/v6uT/rJGG/14qGf9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kj
        Ev9ZIxL/XioZ/6ySh//v6uT/7+rk/+/q5Mre1s4fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3dfPnt3Yz//v6uT+7+rk/7iimP9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kj
        Ev9ZIxL/WSMS/1kjEv9ZIxL/WSMS/7qjmv/v6uT/7+rk/t3Yz//d1s6dAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAN3XzC3d187/39nR/+/q5P/v6uT/b0Aw/1kjEv9eKxX/oZVD/3tYKf9ZIxL/WSMS/1kj
        Ev9ZIxL/WSMS/1kjEv96WCn/oJRD/10qFf9ZIxL/cEIy/+/q5P/v6uT/39nR/93Xzv/c1tEsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA3dbORN3Xzv/g2dH/7+rk/+/q5P9dKBf/WSMS/4BhLf/k/3H/wcdZ/1kj
        Ev9ZIxL/WSMS/1kjEv9ZIxL/WSMS/8HIWv/k/3H/f2As/1kjEv9eKBj/7+rk/+/q5P/g2dH/3dfO/93W
        zkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg2s0p3dfO/9/Z0f/v6uT/7+rk/3FENf9ZIxL/XCgV/5mH
        Pf91TyX/WSMS/1kjEv9ZIxL/WSMS/1kjEv9ZIxL/dVAl/5mHPf9bJxT/WSMS/3JENf/v6uT/7+rk/9/Z
        0f/d187/39nMKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADd2M+P3djP/+/q5P3v6uT/wa2j/1kj
        Ev9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kjEv9ZIxL/vqmg/+/q
        5P/v6uT93dfP/t3Xzo0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfz88Q8Orjx+/q
        5P/v6uT/tZ2T/2IwH/9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kjEv9ZIxL/WSMS/1kjEv9ZIxL/YjAf/7ae
        lP/v6uT/7+rk/+/q48Xfz88QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADv6OVP7+rk/+/q5P/v6uT/6uTe/9XIwP/Sw7v/2M/G/9vTyv/b08r/29PK/9vTyv/Zz8b/0sO7/9XI
        wP/q5d7/7+rk/+/q5P/v6uT/7uvlTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADv6uSP7+rk/+/q5P/v6uT/7+rk/+Te1//d187/3dfO/93Xzv/d187/3dfO/93X
        zv/k39f/7+rk/+/q5P/v6uT/7+rk/+/p5IwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu6eRo7+rk6u/q5P/u6OL/3dfO/93Xzv/d187/3dfO/93X
        zv/d187/3dfO/93Xzv/u6OL/7+rk/+/q5Orw6+RmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//9UG7+vjQOfg2oLd187/3dfO/93X
        zv/d187/3dfO/93Xzv/d187/3dfO/+fj24Hv6+M////MBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AdzX
        z1/d1s533dbOd93Wznfd1s533dbOd93Wznfc1s5e////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+AAAH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/gA
        AB/4AAAf/gAAf/+AAf//8A////gf//+AAf/+AAB//gAAf/wAAD/4AAAf8AAAD+AAAAfgAAAH4AAAB/AA
        AA/4AAAf/AAAP/4AAH//AAD//4AB///gB/8=
</value>
  </data>
</root>